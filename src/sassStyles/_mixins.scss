/*************** 
  RESPONSIVE BREAKPOINTS 

  runs off of em
  1em = 16px

  0 - 600px = Phone
  600 - 900px = Tab-portrait
  900 - 1200px = Tab-landscape

  [1200 - 1800] = basic desktop styling

  1800+ px = large deskops

  $breakpoints:
    
    - phone
    - tab-port
    - tab-land
    - big-desktop 

***************/ 

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content }; //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content }; //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content }; //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (max-width: 112.5em) { @content }; //1800px
    }
}


/*******************
box-shadows

$color:

    - red
    - white

*******************/

@mixin primary-box-shadow {
    //box-shadow: rgba(255, 255, 255, 0.1) 0px 1px 1px 0px inset, rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;
    box-shadow: 0 1rem 1rem rgba($color-black, .1);
}

@mixin primary-box-shadow-hover($color) {
    @if $color == red {
        //box-shadow: rgba($color-primary-red, 0.1) 0px 1px 1px 0px inset, rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;
        box-shadow: 0 1rem 3rem rgba($color-primary-red, .3);
    }
    @if $color == white {
        //box-shadow: rgba($color-white, 0.1) 0px 1px 1px 0px inset, rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;
        box-shadow: 0 1rem 3rem rgba($color-white, .3);
    }
}

@mixin primary-box-shadow-pressed($color) {
    @if $color == red {
        box-shadow: 0 .4rem .8rem rgba($color-primary-red, .7);
    }
    @if $color == white {
        box-shadow: 0 .4rem .8rem rgba($color-white, .7);
    }
    
}

/**************

borders 

$color = color the border will be

**************/

@mixin borderStyle($color) {
    @if $color == red {
        border: .3rem solid $color-primary-red;
    }
    @if $color == white {
        border: .3rem solid $color-white;
    }
}

/**************

beziers

$transitionProperty = element to transition (ie: transform, all, scale, etc.)

**************/

@mixin imageHolderTransition($transitionProperty) {
    transition: $transitionProperty 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);
}


/****************
    mixins to include webkits


animation:
    - $name = animation-name
    - $duration = animation-duration
    - $timing = animation-timing

****************/

@mixin animation($name, $duration, $timing) {
    -webkit-animation-name: $name;
    -webkit-animation-duration: $duration;
    -webkit-animation-timing-function: $timing;
    -moz-animation-name: $name;
    -moz-animation-duration: $duration;
    -moz-animation-timing-function: $timing;
    animation-name: $name;
    animation-duration: $duration;
    animation-timing-function: $timing;
}